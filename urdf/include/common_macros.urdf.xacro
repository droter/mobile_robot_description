<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">


<xacro:macro name="set_environment" params="package_name:='mobile_robot_description' ">
  <xacro:property name="package_name" value="${package_name}" scope="global"/>  
</xacro:macro>

<!--Wheel link & joint macro-->
  <xacro:macro name="wheel"
               params="prefix reflect wheel_props base_props mesh:='' ">

  <xacro:property name="pos_x_joint"
     value="${(base_props['base']['x_size']/2) - wheel_props['wheel']['x_offset']}"/>
  <xacro:property name="pos_y_joint"
    value="${(base_props['base']['y_size']/2) + wheel_props['wheel']['y_offset'] + (wheel_props['wheel']['length']/2)}"/>
  <xacro:property name="pos_z_joint" value="${wheel_props['wheel']['z_offset']}"/>

    <link name="${prefix}_wheel">
    <xacro:if value="${mesh != '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 0"/>
         <geometry>
        <mesh filename="package://${package_name}/meshes/${mesh}.dae" />
        </geometry>
      </visual>
    </xacro:if>
    <xacro:if value="${mesh == '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 0"/>
         <geometry>
         <cylinder radius="${wheel_props['wheel']['radius']}" length="${wheel_props['wheel']['length']}"/>
        </geometry>
        <material name="red"/>
      </visual>
    </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_props['wheel']['radius']}" length="${wheel_props['wheel']['length']}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="${wheel_props['wheel']['mass']}" 
                              r="${wheel_props['wheel']['radius']}" 
                              l="${wheel_props['wheel']['length']}">
      </xacro:cylinder_inertia> 
    </link>
    

    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${pos_x_joint} ${reflect* pos_y_joint} ${pos_z_joint}" rpy="0 0 0"/>
    </joint>
  </xacro:macro>

<!-- Caster wheel link & joint macro -->
  <xacro:macro name="caster_wheel" params="locationprefix locationright wheel_base_dx
    flipY:=${1}">
    <!-- caster hub -->
    <joint name="${locationprefix}_caster_rotation_joint" type="continuous">
      <origin xyz="${wheel_base_dx} ${-caster_wheel_base_dy * locationright} ${caster_wheel_base_dz}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${locationprefix}_caster_rotation_link" />
      <axis xyz="0 0 1" />
      <dynamics damping="0.01" friction="0.0"/>
    </joint>
    <link name="${locationprefix}_caster_rotation_link">
      <inertial>
        <origin xyz="0 0 ${-caster_base_size/2.0}" rpy="0 0 0" />
        <mass value="${caster_base_mass}" />
        <xacro:box_inertia  m="${caster_base_mass}" l="${caster_base_size}" w="${caster_base_size}" h="${caster_base_size}" />
      </inertial>
      <visual>
        <origin xyz="0 0 ${-caster_base_size/2.0}" rpy="0 0 0" />
        <geometry>
          <!--mesh filename="package://mobile_robot_description/meshes/visual/caster_wheel_base.stl" /-->
          <box size="${caster_base_size} ${caster_base_size} ${caster_base_size}" />
        </geometry>
        <xacro:insert_block name="material_silver" />
      </visual>
      <collision>
        <origin xyz="0 0 ${-caster_base_size/2.0}" rpy="0 0 0" />
        <geometry>
          <!--mesh filename="package://mobile_robot_description/meshes/collision/caster_wheel_base.stl" /-->
          <box size="${caster_base_size} ${caster_base_size} ${caster_base_size}" />
        </geometry>
      </collision>
    </link>
    <gazebo reference="${locationprefix}_caster_rotation_link">
      <material>Gazebo/Grey</material>
    </gazebo>
    <!-- caster wheel -->
    <joint name="${locationprefix}_caster_wheel_joint" type="continuous">
      <origin xyz="${caster_wheel_dx} ${-caster_wheel_dy * locationright} ${caster_wheel_dz}" rpy="0 0 0" />
      <parent link="${locationprefix}_caster_rotation_link" />
      <child link="${locationprefix}_caster_wheel_link" />
      <axis xyz="0 1 0" />
    </joint>

    <link name="${locationprefix}_caster_wheel_link">
      <xacro:cylinder_inertial mass="${caster_wheel_mass}" radius="${caster_wheel_radius}" length="${caster_wheel_width}">
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      </xacro:cylinder_inertial>
      <visual>
        <origin xyz="0 0 0" rpy="${flipY*pi/2} 0 0" />
        <geometry>
          <!--mesh filename="package://mobile_robot_description/meshes/visual/wheel.stl" -->
          <cylinder length="${caster_wheel_width}" radius="${caster_wheel_radius}" />
        </geometry>
        <xacro:insert_block name="material_dark_grey" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${flipY*pi/2} 0 0" />
        <geometry>
          <!--mesh filename="package://mobile_robot_description/meshes/visual/wheel.stl" -->
          <cylinder length="${caster_wheel_width}" radius="${caster_wheel_radius}" />
        </geometry>
      </collision>
    </link>
    <gazebo reference="${locationprefix}_caster_wheel_link">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
  </xacro:macro>


<!--Base macro-->
  <xacro:macro name="base"
               params="base_prop mesh:='' *origin ">
    <link name="base_link">
    <xacro:box_inertia m="${base_prop['base']['mass']}" 
                       x="${base_prop['base']['x_size']}" 
                       y="${base_prop['base']['y_size']}"
                       z="${base_prop['base']['z_size']}"> 
    </xacro:box_inertia>
    <xacro:if value="${mesh != '' }" >
      <visual>
        <xacro:insert_block name="origin" />
        <geometry>
          <!-- The folder path get a folder_name global parameter -->
          <mesh filename="package://${package_name}/meshes/${mesh}.dae" />
        </geometry>
        <material name="white" />
      </visual>
    </xacro:if>
    <xacro:if value="${mesh == '' }" >
      <visual>
        <xacro:insert_block name="origin" />
        <geometry>
          <box size="${base_prop['base']['x_size']} ${base_prop['base']['y_size']} ${base_prop['base']['z_size']}"/>
        </geometry>
        <material name="white" />
      </visual>
    </xacro:if>  
    <collision>
      <geometry>
        <box size="${base_prop['base']['x_size']} ${base_prop['base']['y_size']} ${base_prop['base']['z_size']}"/>
      </geometry>
    </collision>
    </link>
  </xacro:macro> 

<!--Intertial macros-->
  <xacro:macro name="cylinder_inertia" params="m r l">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m*(3*r*r+l*l)/12}" ixy = "0" ixz = "0" 
               iyy="${m*(3*r*r+l*l)/12}" iyz = "0" izz="${m*r*r/2}"/> 
    </inertial>
  </xacro:macro>

 <xacro:macro name="box_inertia" params="m x y z">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m / 12.0 * (y*y + z*z)}" ixy="0.0" ixz="0.0"
               iyy="${m / 12.0 * (x*x + z*z)}" iyz="0.0" 
               izz="${m / 12.0 * (x*x + y*y)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${2.0*m*(r*r)/5.0}" ixy="0.0" ixz="0.0" iyy="${2.0*m*(r*r)/5.0}" iyz="0.0" izz="${2.0*m*(r*r)/5.0}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </xacro:macro>

<!--Color Properties-->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>



</robot>