<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="mobile_robot">

   <xacro:include filename="$(find quimera_robot_description)/urdf/common_macro.xacro" />

  <!--Color Properties-->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  
  <xacro:property name="PI" value="3.14"/>
  
  <xacro:property name="base_width" value="0.198"/>
  <xacro:property name="base_len" value="0.195"/>
  <xacro:property name="base_height" value="0.182"/>
  <xacro:property name="base_mass" value="2.5"/>

  <xacro:property name="main_wheel_radius" value="0.053"/>
  <xacro:property name="main_wheel_height" value="0.033"/>
  <xacro:property name="main_wheel_mass" value="0.27"/>
  <!-- Offset distance from the outter border to the center of the wheel-->
  <xacro:property name="main_wheel_x_offset" value="0.128"/>
  <!-- Offset distance from the outter border to the face of the wheel -->
  <xacro:property name="main_wheel_y_offset" value="0.02"/>
  <!-- Offset distance from the bottom border to the center of the wheel -->
  <xacro:property name="main_wheel_z_offset" value="0.05"/>

  <xacro:property name="pos_x_joint" value="${(base_len/2) - main_wheel_x_offset}"/>
  <xacro:property name="pos_y_joint" value="${(base_width/2) - main_wheel_y_offset - (main_wheel_height/2)}"/>
  <xacro:property name="pos_z_joint" value="${main_wheel_z_offset}"/>

  <!-- <xacro:property name="wheel_props" value="${dict(radius=0.05, height=5)}"/> -->

  <xacro:property name="wheel_yaml" value="$(find quimera_robot_description)/config/wheel.yaml" />
  <xacro:property name="wheel_props" value="${load_yaml(wheel_yaml)}"/>


  <xacro:property name="caster_radius" value="0.011"/>
  <xacro:property name="caster_height" value="0.006"/>
  <xacro:property name="caster_mass" value="0.01"/>
  <!-- Offset distance from the outter border to the center of the wheel-->
  <xacro:property name="caster_x_offset" value="0.035"/>
  <!-- Offset distance from the outter border to the face of the wheel -->
  <xacro:property name="caster_y_offset" value="0.050"/>
  <!-- Offset distance from the bottom border to the center of the wheel -->
  <xacro:property name="caster_z_offset" value="0.008"/>

  <xacro:property name="caster_pos_x_joint" value="${(base_len/2) - caster_x_offset}"/>
  <xacro:property name="caster_pos_y_joint" value="${(base_width/2) - caster_y_offset - (caster_height/2)}"/>
  <xacro:property name="caster_pos_z_joint" value="${caster_z_offset}"/>
 
  <!--Base link-->
  <link name="base_link">
    <xacro:box_inertia m="10" w="${base_len}" h="${base_width}" d="0.01"/>
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 -${PI/2}" />
      <geometry>
        <mesh filename="package://quimera_robot_description/meshes/quimera_struct.dae" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <geometry>
        <box size="${base_len} ${base_width} 0.01"/>
      </geometry>
    </collision>
  </link>

  <!--Wheel link1 & joint macro-->
  <xacro:macro name="wheel"
               params="prefix reflect wheel_prop
                       pos_x_joint pos_y_joint pos_z_joint mesh:=''">
    <xacro:property name="radius" value="${wheel_props['wheel']['radius']}"/>
    <link name="${prefix}_wheel">
    <xacro:if value="${mesh != '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 0"/>
         <geometry>
        <mesh filename="package://quimera_robot_description/meshes/${mesh}.dae" />
        </geometry>
      </visual>
    </xacro:if>
    <xacro:if value="${mesh == '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 0"/>
         <geometry>
         <cylinder radius="${wheel_prop['wheel']['radius']}" length="${wheel_prop['wheel']['length']}"/>
        </geometry>
        <material name="red"/>
      </visual>
    </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_prop['wheel']['radius']}" length="${wheel_prop['wheel']['length']}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="${wheel_prop['wheel']['mass']}" 
                              r="${wheel_prop['wheel']['radius']}" 
                              h="${wheel_prop['wheel']['length']}">
      </xacro:cylinder_inertia> 
    </link>
    

    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${pos_x_joint} ${reflect* pos_y_joint} ${pos_z_joint}" rpy="0 0 0"/>
    </joint>
  </xacro:macro> 

  <xacro:wheel prefix="right" reflect="-1"
                      wheel_prop="${wheel_props}"
                      pos_x_joint="${pos_x_joint}"
                      pos_y_joint="${pos_y_joint}"
                      pos_z_joint="${pos_z_joint}">
  </xacro:wheel>

  <xacro:wheel prefix="left" reflect="1"
                      wheel_prop="${wheel_props}"
                      pos_x_joint="${pos_x_joint}"
                      pos_y_joint="${pos_y_joint}"
                      pos_z_joint="${pos_z_joint}">
  </xacro:wheel>

  <xacro:wheel prefix="caster_right" reflect="-1" 
                      wheel_prop="${wheel_props}" 
                      pos_x_joint="${caster_pos_x_joint}" 
                      pos_y_joint="${caster_pos_y_joint}" 
                      pos_z_joint="${caster_pos_z_joint}" 
                      mesh="wheel">
  </xacro:wheel>

  <xacro:wheel prefix="caster_left" reflect="1" 
                      wheel_prop="${wheel_props}" 
                      pos_x_joint="${caster_pos_x_joint}" 
                      pos_y_joint="${caster_pos_y_joint}" 
                      pos_z_joint="${caster_pos_z_joint}" 
                      mesh="wheel">
  </xacro:wheel>                      


  <!-- <xacro:include filename="$(find mobile_description)/urdf/mobile_robot_gazebo_plugins.xacro"/>  -->

</robot>